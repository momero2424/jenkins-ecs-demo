---
Description:
  Demo VPC

Parameters:

  EnvironmentName:
    Description: El nombre del ambiente
    Type: String

  VpcCIDR:
    Description: Rango de direcciones IP para la VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: Rango de direcciones IP para la subnet publica en AZ1
    Type: String
    Default: 10.0.1.0/24

  PublicSubnet2CIDR:
    Description: Rango de direcciones IP para la subnet publica en AZ2
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet1CIDR:
    Description: Rango de direcciones IP para la subnet privada en AZ1
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnet2CIDR:
    Description: Rango de direcciones IPC para la subnet privada en AZ2
    Type: String
    Default: 10.0.4.0/24

Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCIDR
      InstanceTenancy: "default"
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} VPC

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} IGW

  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnetAZ1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs { Ref: "AWS::Region" } ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} public subnet 1

  PublicSubnetAZ2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs { Ref: "AWS::Region" } ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} public subnet 2

  PrivateSubnetAZ1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs { Ref: "AWS::Region" } ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} private subnet 1

  PrivateSubnetAZ2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs { Ref: "AWS::Region" } ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} private subnet 2

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} public route table

  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnetAZ1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnetAZ2
      RouteTableId: !Ref PublicRouteTable

  EIP1:
    Type: "AWS::EC2::EIP"
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayAZ1:
    Type: "AWS::EC2::NatGateway"
    DependsOn: InternetGatewayAttachment
    Properties:
      AllocationId: !GetAtt EIP1.AllocationId
      SubnetId: !Ref PublicSubnetAZ1

  EIP2:
    Type: "AWS::EC2::EIP"
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayAZ2:
    Type: "AWS::EC2::NatGateway"
    DependsOn: InternetGatewayAttachment
    Properties:
      AllocationId: !GetAtt EIP2.AllocationId
      SubnetId: !Ref PublicSubnetAZ2

  PrivateRouteTableAZ1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} private route table 1

  PrivateRouteAZ1:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PrivateRouteTableAZ1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZ1

  PrivateRouteTableAZ2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: name
          Value: !Sub ${EnvironmentName} private route table 2

  PrivateRouteAZ2:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PrivateRouteTableAZ2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZ2

  PrivateSubnetRouteTableAssociation1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnetAZ1
      RouteTableId: !Ref PrivateRouteTableAZ1

  PrivateSubnetRouteTableAssociation2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnetAZ2
      RouteTableId: !Ref PrivateRouteTableAZ2

Outputs:

  VPC:
    Description: Referencia a la VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: Lista de las subnets publicas
    Value: !Join [ ",", [ !Ref PublicSubnetAZ1, !Ref PublicSubnetAZ2 ]]

  PrivateSubnets:
    Description: Lista de las subnets privadas
    Value: !Join [ ",", [ !Ref PrivateSubnetAZ1, !Ref PrivateSubnetAZ2 ]]

  PublicSubnetAZ1:
    Description: Referencia a la subnet publica en AZ1
    Value: !Ref PublicSubnetAZ1

  PublicSubnetAZ2:
    Description: Referencia a la subnet publica en AZ2
    Value: !Ref PublicSubnetAZ2

  PrivateSubnetAZ1:
    Description: Referencia a la subnet privada en AZ1
    Value: !Ref PrivateSubnetAZ1

  PrivateSubnetAZ2:
    Description: Referenciac a la subnet privada en AZ2
    Value: !Ref PrivateSubnetAZ2
