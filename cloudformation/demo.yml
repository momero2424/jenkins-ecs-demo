---
Description:
  Demo App jenkins ecs

Parameters:

  BucketName:
    Description: S3 Bucket donde estan almacenados los templates
    Type: String

  KeyName:
    Description: Llave de acceso a los hosts
    Type: AWS::EC2::KeyPair::KeyName

  JenkinsMasterImage:
    Description: Imagen de docker a ejecutar
    Type: String

  JenkinsSlaveImage:
    Description: Imagen de docker a ejecutar
    Type: String

  AppImage:
    Description: Imagen de docker a ejecutar
    Type: String

  VpcCIDR:
    Description: Rango de direcciones IP para la VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: Rango de direcciones IP para la subnet publica en AZ1
    Type: String
    Default: 10.0.1.0/24

  PublicSubnet2CIDR:
    Description: Rango de direcciones IP para la subnet publica en AZ2
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet1CIDR:
    Description: Rango de direcciones IP para la subnet privada en AZ1
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnet2CIDR:
    Description: Rango de direcciones IPC para la subnet privada en AZ2
    Type: String
    Default: 10.0.4.0/24

Resources:

  VPC:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/vpc.yml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR

  SecurityGroups:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/security_groups.yml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  JenkinsLoadBalancer:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/load_balancers.yml
      Parameters:
        EnvironmentName: !Sub Jenkins-${AWS::StackName}
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  AppLoadBalancer:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/load_balancers.yml
      Parameters:
        EnvironmentName: !Sub App-${AWS::StackName}
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  JenkinsCluster:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/jenkins_cluster.yml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.medium
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ContainersSecurityGroup
        KeyName: !Ref KeyName
        MinSize: 1
        MaxSize: 2
        Desired: 1

  JenkinsService:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/services/jenkins_service.yml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt JenkinsCluster.Outputs.JenkinsCluster
        JenkinsMasterImage: !Ref JenkinsMasterImage
        JenkinsSlaveImage: !Ref JenkinsSlaveImage
        AppImage: !Ref AppImage
        DesiredCount: 1
        Listener: !GetAtt JenkinsLoadBalancer.Outputs.Listener
        Path: /*

  AppCluster:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/infrastructure/app_cluster.yml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.medium
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ContainersSecurityGroup
        KeyName: !Ref KeyName
        MinSize: 1
        MaxSize: 3
        Desired: 2

  AppService:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/services/app_service.yml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt AppCluster.Outputs.AppCluster
        Image: !Ref AppImage
        DesiredCount: 3
        Listener: !GetAtt AppLoadBalancer.Outputs.Listener
        Path: /*

Outputs:

  AppCluster:
    Description: Referencia al cluster de App
    Value: !GetAtt AppCluster.Outputs.AppCluster

  AppService:
    Description: Referencia al servicio de App
    Value: !GetAtt AppService.Outputs.AppService

  AppLoadBalancerUrl:
    Description: Referencia al servicio de App
    Value: !GetAtt AppLoadBalancer.Outputs.LoadBalancerUrl

  JenkinsLoadBalancerUrl:
    Description: Referencia al servicio de Jenkins
    Value: !GetAtt JenkinsLoadBalancer.Outputs.LoadBalancerUrl
